@model SuperMarketK.Models.Register
@using BotDetect.Web.Mvc;
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
      rel="stylesheet" type="text/css" />
@{
    MvcCaptcha registerCaptcha = new MvcCaptcha("registerCaptcha");
    registerCaptcha.UserInputID = "CaptchaCode";
}
@{
    ViewBag.Title = "Đăng Ký";
}
@section treeMap{
    <div class="products-breadcrumb">
        <div class="container">
            <ul>
                <li><i class="fa fa-home" aria-hidden="true"></i><a href="/">Home</a><span>|</span></li>
                <li>Đăng Ký</li>
            </ul>
        </div>
    </div>
}
<div class="banner">
    <div>
        <div class="w3_login">
            <h3>ĐĂNG KÝ</h3>
            <div class="w3_login_module">
                <div class="module form-module">
                    <div class="toggle"></div>
                    <div class="form">
                        <h2>Create an account</h2>
                        @using (Html.BeginForm("Register", "User", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        <div class="form-group">
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                            @if (ViewBag.Success != null)
                            {
                                <div class="alert alert-success">@ViewBag.Success</div>
                            }
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PassWord, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.PasswordFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassWord, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.PasswordFor(model => model.ConfirmPassWord, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassWord, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                    <div class="form-group">
                        <lable class="control-label col-md-4"></lable>
                        <div class="col-md-8">
                            @Html.Captcha(registerCaptcha)
                            <br />
                            @Html.TextBox("CaptchaCode", null, new { placeholder = "Mã xác nhận" })
                        </div>
                    </div>

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                        }
                    </div>
                   
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
</div>




